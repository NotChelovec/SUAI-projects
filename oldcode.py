import os
import sqlite3
import telebot
from telebot import types 

BOT_TOKEN = os.environ.get('7562465469:AAGqnwtk7odixnropr_3jXEcKZfzEyEV2oA')
bot = telebot.TeleBot('7562465469:AAGqnwtk7odixnropr_3jXEcKZfzEyEV2oA')

#–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('messages.db')
cursor = conn.cursor()
cursor.execute("")

# –ù–∏–∫–Ω–µ–π–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
TEACHERS = ["todaysha"]

@bot.message_handler(commands=['start'])
def start_command(message):
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
  if message.from_user.username in TEACHERS:
      # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      project_button = types.KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")
      student_list_button = types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
      reports_button = types.KeyboardButton("–û—Ç—á–µ—Ç—ã")
      help_button = types.KeyboardButton("–ö–æ–º–∞–Ω–¥—ã")
      keyboard.add(project_button, student_list_button, reports_button, help_button)
      bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å! üéì", reply_markup=keyboard)
  else:
      # –û–±—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      menu_button = types.KeyboardButton("–ú–µ–Ω—é")
      help_button = types.KeyboardButton("–ö–æ–º–∞–Ω–¥—ã")
      projects_button = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
      contacts_button = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
      keyboard.add(menu_button, help_button, projects_button, contacts_button)
      bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –≤—ã –∑–∞—à–ª–∏ –≤ –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤! üëã", reply_markup=keyboard)

@bot.message_handler(commands=['main'])
def start_command(message):
  keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
  if message.from_user.username in TEACHERS:
      # –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      project_button = types.KeyboardButton("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏")
      student_list_button = types.KeyboardButton("–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
      reports_button = types.KeyboardButton("–û—Ç—á–µ—Ç—ã")
      help_button = types.KeyboardButton("–ö–æ–º–∞–Ω–¥—ã")
      keyboard.add(project_button, student_list_button, reports_button, help_button)
      bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å! üéì", reply_markup=keyboard)
  else:
      # –û–±—ã—á–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      menu_button = types.KeyboardButton("–ú–µ–Ω—é")
      help_button = types.KeyboardButton("–ö–æ–º–∞–Ω–¥—ã")
      projects_button = types.KeyboardButton("–ü—Ä–æ–µ–∫—Ç—ã")
      contacts_button = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
      keyboard.add(menu_button, help_button, projects_button, contacts_button)
      bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, –≤—ã –∑–∞—à–ª–∏ –≤ –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤! üëã", reply_markup=keyboard)
      
@bot.message_handler(commands=['about'])
def about_command(message):
    bot.reply_to(message, "–Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤, –ø–æ–º–æ–≥–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º.\n\nSUAI_project_bot –º–æ–∂–µ—Ç:\n\nüóÉÔ∏è - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫–æ—Ç–æ—Ä–≤—ã–µ –≤—ã —Å–æ–∑–¥–∞–ª–∏\nüë®‚Äçüíº  - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö\nüí¨ - –û—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ")

@bot.message_handler(commands=['info'])
def about_command(message):
    bot.reply_to(message, "–£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/start\n/menu\n/help\n/about")
    
@bot.message_handler(func=lambda message: message.text == "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ—Ç–∞–º–∏")
def manage_projects(message):
  if message.from_user.username in TEACHERS:
      bot.reply_to(message, "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–µ–∫—Ç–∞–º–∏.")
  else:
      bot.reply_to(message, "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.")

@bot.message_handler(func=lambda message: message.text == "–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")
def student_list(message):
  if message.from_user.username in TEACHERS:
      bot.reply_to(message, "–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.")
  else:
      bot.reply_to(message, "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.")

@bot.message_handler(func=lambda message: message.text == "–û—Ç—á–µ—Ç—ã")
def reports(message):
  if message.from_user.username in TEACHERS:
      bot.reply_to(message, "–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç—á–µ—Ç–æ–≤.")
  else:
      bot.reply_to(message, "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.")

@bot.message_handler(func=lambda message: message.text == "–ú–µ–Ω—é")
def menu_command(message):
  bot.reply_to(message, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ–Ω—é. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å?")

@bot.message_handler(func=lambda message: message.text == "–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã")
def edit_command(message):
  bot.reply_to(message, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

@bot.message_handler(func=lambda message: message.text == "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
def add_project(message):
  bot.reply_to(message, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

@bot.message_handler(func=lambda message: message.text == "–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç")
def edit_project(message):
  bot.reply_to(message, "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")

@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ–µ–∫—Ç—ã")
def projects_command(message):
  if message.from_user.username not in TEACHERS:
    keybord = keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_add_command = types.KeyboardButton("–†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã")
    button_add_project = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç")
    button_edit_project = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç")
    keybord.add(button_add_command, button_add_project, button_edit_project)
    bot.reply_to(message, "–í —Ä–∞–∑–¥–µ–ª–µ '–ø—Ä–æ–µ–∫—Ç—ã' –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–µ–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n\nüìù - –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç\nüë• - –†–µ–¥–∞–∫—Ç–æ—Ä –ö–æ–º–∞–Ω–¥—ã\nüìã - –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ–µ–∫—Ç", reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "–ö–æ–Ω—Ç–∞–∫—Ç—ã")
def contacts_command(message):
  bot.send_photo(message.chat.id, 'https://pro.guap.ru/avatars/9/8544.jpg', caption= "–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: –ß–µ—Ä–Ω—ã—à–µ–≤ –°—Ç–∞–Ω–∏—Å–ª–∞–≤ –ê–Ω–¥—Ä–µ–µ–≤–∏—á:\n–ü–æ—á—Ç–∞: madteacher@bk.ru\n–¢–µ–ª–µ–≥—Ä–∞–º: @MADComrade")

@bot.message_handler(func=lambda message: message.text == "–ö–æ–º–∞–Ω–¥—ã")
def help_command(message):
  bot.reply_to(message, "–£ –º–µ–Ω—è –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n/start\n/menu\n/info\n/about")


bot.polling()

